#!/usr/bin/env bash

# shellckeck source=deploy_defines
source deploy_defines

create_deployment_branches () {
    # checkout a base from which deply branches are derived
    git checkout "$base_branch" || { echo "Exiting!"; exit "$ERRCODE"; }

    # create temporary branches, clone subdirectories 
    for branch in "${!branch_version[@]}";
        do echo "Switch to branch: $branch.  - With version:${branch_version[$branch]}";
        git checkout "$branch"
        # change .gitignore, needed to include submodules. sed matches doc/ros2_control*, so all submodules are excluded
        sed -i "s/doc\/ros2_control/\#doc\/ros2_control/g" .gitignore
        # make sure all submodules are inited
        echo "Clone repositories for $branch and checkout ${branch_version[$branch]}"
        for repo_name in "${!subrepo_url[@]}";
            do echo "Create doc/$repo_name";
                git clone "${subrepo_url[$repo_name]}" -b "${branch_version[$branch]}" doc/"$repo_name"
                cd doc/"$repo_name" || { echo "Could not clone $repo_name to doc/ directory. Exiting!"; exit "$ERRCODE"; } 
                rm -rf .git/
                cd ../../ 
        done
        git add .
        git commit -m "Add temporary changes for multi version"
        git checkout "$base_branch"
        for repo_name in "${!subrepo_url[@]}";
            do rm -rf doc/"$repo_name";
        done
    done
}

create_deployment_branches